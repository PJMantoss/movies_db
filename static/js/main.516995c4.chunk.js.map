{"version":3,"sources":["searchComponents/MovieList.js","searchComponents/Search.js","movieComponents/Pagination.js","movieComponents/MovieHome.js","searchComponents/SearchResult.js","movieComponents/MovieInfo.js","Home.js","App.js","index.js"],"names":["MovieListItem","movies","to","show","id","ListItem","button","ListItemText","primary","name","MovieList","props","style","display","flex","flexDirection","justifyContent","alignItems","List","component","list","map","key","Search","onMoviesInputChange","e","setState","movieName","target","value","isFetching","fetch","then","response","json","state","importantText","bind","this","TextField","label","type","margin","onChange","helperText","length","trim","Component","LEFT_PAGE","RIGHT_PAGE","range","from","step","i","push","Pagination","fetchPageNumbers","totalPages","currentPage","pageNeighbours","totalNumbers","startPage","Math","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","gotoPage","page","onPageChanged","f","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","handleMoveRight","ceil","aria-label","className","index","href","onClick","aria-hidden","classes","makeStyles","theme","container","gridTemplateColumns","GridTemplateRow","gridGap","spacing","divider","MovieHome","data","tvShows","offset","currentShows","slice","results","totalShows","headerClass","join","Container","item","root","Grid","xs","textDecoration","Card","CardMedia","height","image","original","CardContent","Typography","premiered","rating","average","CardActions","styles","appBar","position","Transition","Slide","direction","SearchResult","open","handleClose","match","params","Dialog","fullscreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","color","variant","alt","src","medium","secondary","Divider","_embedded","episodes","MovieInfo","movieDetails","loading","details","genres","summary","cast","Home","exact","path","App","width","Button","align","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.516995c4.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst MovieListItem = ({movies}) => (\n    <Link to={`/movies/${movies.show.id}`}>\n        <ListItem button>\n        <ListItemText primary={movies.show.name} />\n        </ListItem>\n    </Link>\n)\n\nfunction MovieList(props) {\n    return (\n        <div style={{\n            display:'flex',\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems:'center'\n        }}>\n            <List component=\"nav\">\n                {props.list.map(movies =>(\n                    <MovieListItem movies={movies} key={movies.show.id} />\n                ))}\n            </List>\n        </div>\n    )\n}\n\nexport default MovieList\n","import React, { Component } from 'react';\nimport MovieList from './MovieList';\nimport TextField from '@material-ui/core/TextField';\n\nclass Search extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movies: [],\n            movieName: \"\",\n            isFetching: false,\n            importantText: \"\"\n        }\n\n        this.onMoviesInputChange = this.onMoviesInputChange.bind(this);\n    }\n\n    onMoviesInputChange = e => {\n        this.setState({movieName:e.target.value, isFetching:true})\n        fetch(`http://api.tvmaze.com/search/shows?q=${e.target.value}`)\n        .then((response) => response.json())\n        .then(json => this.setState({movies: json, isFetching: false}))\n    }\n\n    render() {\n        const { movies, movieName, isFetching, importantText } = this.state\n\n        return (\n            <div>\n                <div>\n                   <TextField\n                       id=\"search\" \n                       label=\"Search Movies\" \n                       type=\"search\"\n                       margin=\"normal\"\n                       value={movieName} \n                       onChange={this.onMoviesInputChange}\n                       helperText={importantText}\n                    />\n                </div>\n                <div>\n                        {\n                            !isFetching && movies.length === 0 && movieName.trim() === \"\"\n                            &&\n                            <p></p>\n                        }\n                        {\n                            !isFetching && movies.length === 0 && movieName.trim() !== \"\"\n                            &&\n                            <p>No Movies have been found with this name</p>\n                        }\n                        \n                        {\n                            !isFetching && <MovieList list={this.state.movies}/>\n                        }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 10, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    \n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n      }\n\n      case (!hasLeftSpill && hasRightSpill): {\n        const extraPages = range(endPage + 1, endPage + spillOffset);\n        pages = [...pages, ...extraPages, RIGHT_PAGE];\n        break;\n      }\n\n      case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Shows Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Search from '../searchComponents/Search';\nimport Pagination from './Pagination';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n\nconst classes = makeStyles(theme => ({\n    container: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(12, 1fr)',\n        GridTemplateRow: 'auto',\n        gridGap: theme.spacing(3),\n      },\n    divider: {\n        margin: theme.spacing(2, 0),\n      },\n  }));\n\n\nexport class MovieHome extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            tvShows: [],\n            currentShows: [],\n            currentPage: null,\n            totalPages: null\n        }\n    }\n\n\n    componentDidMount(){\n        fetch(\"http://api.tvmaze.com/shows\")\n        .then((response) => response.json())\n        .then((results) => {\n            this.setState({\n                tvShows: results\n            });\n        })\n    }\n\n    onPageChanged = data => {\n      const { tvShows } = this.state;\n      const { currentPage, totalPages, pageLimit } = data;\n  \n      const offset = (currentPage - 1) * pageLimit;\n      const currentShows = tvShows.slice(offset, offset + pageLimit);\n  \n      this.setState({ currentPage, currentShows, totalPages });\n    }\n\n    render() {\n\n          const { tvShows, currentShows, currentPage, totalPages } = this.state;\n          const totalShows = tvShows.length;\n\n          if (totalShows === 0) return null;\n\n          const headerClass = ['text-dark py-2 pr-4 m-0', currentPage ? 'border-gray border-right' : ''].join(' ').trim();\n\n        return (\n                <Container>\n                    <Search />\n\n                    <div className=\"w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between\">\n\n                          <div className=\"d-flex flex-row align-items-center\">\n\n                              <h2 className={headerClass}>\n                                <strong className=\"text-secondary\">{totalShows}</strong> TV Shows\n                              </h2>\n                              \n                              { currentPage && (\n                                <span className=\"current-page d-inline-block h-100 pl-4 text-secondary\">\n                                  Page <span className=\"font-weight-bold\">{ currentPage }</span> / <span className=\"font-weight-bold\">{ totalPages }</span>\n                                </span>\n                              ) }\n\n                          </div>\n\n                          <div className=\"d-flex flex-row py-4 align-items-center\">\n                            <Pagination totalRecords={totalShows} pageLimit={18} pageNeighbours={1} onPageChanged={this.onPageChanged} />\n                          </div>\n                          \n                    </div>\n\n                    { currentShows.map((item, id) => <div className={classes.root} key={id} item={item}>\n\n                            <Grid container spacing={3}>\n                                {this.state.tvShows.map((item, id) => {\n                                    return(\n                                        <Grid item xs={3}\n                                            key={id}  \n                                        >\n                                            <Link style={{ textDecoration: 'none' }} to=\"/movieinfo/${id}\" >\n                                            <Card>\n                                                <CardMedia \n                                                   style={{height:400}}\n                                                   component=\"img\" \n                                                   image={item.image.original} \n                                                />\n                                                <CardContent>\n                                                    <Typography component=\"h2\">\n                                                       {item.name}\n                                                    </Typography>\n                                                    <Typography component=\"h3\">\n                                                        Year: {item.premiered}\n                                                    </Typography >\n                                                    <Typography component=\"h3\">\n                                                        Rating: {item.rating.average}\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions>\n                                                </CardActions>\n                                            </Card>\n                                            </Link>\n                                        </Grid>\n                                    )\n                                })}\n                            </Grid>\n\n                            </div>) }\n\n                </Container>\n            )\n        }\n    }\n    \n\nexport default MovieHome","import React ,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n        display:'flex',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\n\nexport class SearchResult extends Component {\n    \n        state = {\n            open:false,\n            show:null\n        }\n        \n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n\n        fetch(`http://api.tvmaze.com/shows/${id}?embed=episodes`)\n        .then((response) => response.json())\n        .then(json => this.setState({show:json, open:true}))\n    }\n\n    render() {\n        const {show} = this.state;\n        return (\n            <div>\n                {\n                    show !== null && \n                        <Dialog \n                             fullscreen \n                             open={this.state.open} \n                             onClose={this.handleClose}\n                             TransitionComponent={Transition} \n                        >\n                    \n                                <AppBar style={styles.appBar}>\n                                    <Toolbar>\n                                        <Link to={'/'}>\n                                            <IconButton color=\"default\" onClick={this.handleClose} aria-label=\"Close\">\n                                                <CloseIcon />\n                                            </IconButton>\n                                        </Link>\n                                        <Typography variant=\"title\" color=\"inherit\" style={styles.flex}>\n                                            {show.name}\n                                        </Typography>\n                                    </Toolbar>\n                                </AppBar>\n\n                                <div style={{\n                                    flex: 1,\n                                    display:'flex',\n                                    flexDirection: 'row',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                    <div>\n                                        <ListItem button>\n                                            {\n                                                show.image != null &&\n                                                <img alt=\"Show\" src={show.image.medium}/>\n                                            }\n                                        </ListItem>\n                                    </div>\n\n                                    <div>\n                                        <List>\n                                            <ListItem button>\n                                                <ListItemText primary=\"Premiered\" secondary={show.premiered} />\n                                            </ListItem>\n\n                                            <Divider />\n\n                                            <ListItem button>\n                                                <ListItemText primary=\"Rating\" secondary={show.rating.average} />\n                                            </ListItem>\n\n                                            <Divider />\n\n                                            <ListItem button>\n                                                <ListItemText primary=\"Episodes\" secondary={show._embedded.episodes.length} />\n                                            </ListItem>\n\n                                            <Divider />\n\n                                        </List>\n                                    </div>\n\n                                </div>\n                        </Dialog>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SearchResult;\n","import React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n\nexport class MovieInfo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movieDetails: {},\n            loading: true\n        }\n    }\n\n\n    componentDidMount(){\n\n        let id = this.props.id;\n\n        fetch(`http://api.tvmaze.com/shows/${id}?embed=cast`)\n        .then((response) => response.json())\n        .then((details) => {\n            this.setState({\n                movieDetails: details,\n                loading: false\n            });\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    {this.state.loading ? (\n                    <div>Loading...</div>\n                    ) : (\n                    <div>\n                        <div>\n                            <Card>\n                                <CardMedia\n                                    style={{height:400}}\n                                    component=\"img\" \n                                    image={this.state.movieDetails.image}\n                                />\n                                <CardContent>\n                                    <Typography component=\"h1\">\n                                       {this.state.movieDetails.name}\n                                    </Typography>\n                                    <Typography component=\"h3\">\n                                        Year: {this.state.movieDetails.premiered}\n                                    </Typography >\n                                    <Typography component=\"h3\">\n                                        Rating: {this.state.movieDetails.rating}\n                                    </Typography>\n                                    <Typography component=\"h3\">\n                                        Genre: {this.state.movieDetails.genres}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                </CardActions>\n                            </Card>\n                        </div>\n                        <br/>\n\n                        <div>\n                            <h2>Summary</h2>\n                            {this.state.movieDetails.summary}\n                        </div>\n\n                        <div>\n                             {this.state.movieDetails.episodes}\n                        </div>\n\n                        <div>\n                            <h3>Cast</h3>\n                            {this.state.movieDetails.cast}\n                        </div>\n                    </div>)}\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default MovieInfo\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MovieHome from './movieComponents/MovieHome';\nimport SearchResult from './searchComponents/SearchResult';\nimport MovieInfo from './movieComponents/MovieInfo';\n\nconst Home = props => (\n    <Switch>\n        <Route exact path=\"/\" component={MovieHome}/>\n        <Route path=\"/movies/:id\" component={SearchResult}/>\n        <Route path=\"/movieinfo/${id}\" component={MovieInfo}/>\n    </Switch>\n);\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport 'whatwg-fetch';\nimport Home from './Home';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <table className=\"tableHead\">\n          <tbody>\n            <tr>\n              <td> <img alt=\"app icon\" width=\"85\" src=\"https://img.icons8.com/clouds/200/000000/retro-tv.png\" /> </td>\n              <td width=\"10\" />\n              <td>\n                <h1>Movies Database</h1>\n              </td>\n              <td className=\"homeBtn\">\n                <Link style={{ textDecoration: 'none' }} to=\"/\">\n                    <Button variant=\"contained\" color=\"primary\">Home</Button>\n                </Link>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <AppBar position=\"static\" >\n            <Toolbar >\n                <Typography variant=\"title\" color=\"inherit\" style={{flex:1}} align=\"center\">\n                  Look Up Your Favorite TV Shows and Movies\n                </Typography>\n            </Toolbar>\n        </AppBar>\n\n        <Home />\n  \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <HashRouter>\n       <App />\n    </HashRouter>, \n    document.getElementById('root'));\n"],"sourceRoot":""}